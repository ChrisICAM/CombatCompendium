// Generated by view binder compiler. Do not edit!
package com.example.combatcompendium.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.combatcompendium.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Notification;

  @NonNull
  public final Button button8;

  @NonNull
  public final ConstraintLayout frameLayout7;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView timeSet;

  @NonNull
  public final Button userGuide;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView, @NonNull Button Notification,
      @NonNull Button button8, @NonNull ConstraintLayout frameLayout7, @NonNull TextView textView3,
      @NonNull TextView textView5, @NonNull TextView timeSet, @NonNull Button userGuide) {
    this.rootView = rootView;
    this.Notification = Notification;
    this.button8 = button8;
    this.frameLayout7 = frameLayout7;
    this.textView3 = textView3;
    this.textView5 = textView5;
    this.timeSet = timeSet;
    this.userGuide = userGuide;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Notification;
      Button Notification = ViewBindings.findChildViewById(rootView, id);
      if (Notification == null) {
        break missingId;
      }

      id = R.id.button8;
      Button button8 = ViewBindings.findChildViewById(rootView, id);
      if (button8 == null) {
        break missingId;
      }

      ConstraintLayout frameLayout7 = (ConstraintLayout) rootView;

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.timeSet;
      TextView timeSet = ViewBindings.findChildViewById(rootView, id);
      if (timeSet == null) {
        break missingId;
      }

      id = R.id.userGuide;
      Button userGuide = ViewBindings.findChildViewById(rootView, id);
      if (userGuide == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, Notification, button8,
          frameLayout7, textView3, textView5, timeSet, userGuide);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
